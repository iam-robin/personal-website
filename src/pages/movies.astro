---
import Layout from '@layouts/Layout.astro';
import { scrapeLetterboxdFilms } from '@utils/letterboxd';

const username = 'iamrobin';
let movieData;
let error = null;

try {
    movieData = await scrapeLetterboxdFilms(username, 5); // Limit to 5 pages for build performance
} catch (e) {
    console.error('Failed to fetch Letterboxd data:', e);
    error = e instanceof Error ? e.message : 'Unknown error occurred';
    movieData = { films: [], count: 0, updated_at: new Date().toISOString() };
}

const { films, count, updated_at } = movieData;

// Filter films to only show those watched after 2023 (2024 and onwards)
const recentFilms = films.filter((film) => {
    const watchDate = new Date(film.watched_on);
    return watchDate.getFullYear() >= 2024;
});

// Sort films by watch date (most recent first)
const sortedFilms = recentFilms.sort(
    (a, b) => new Date(b.watched_on).getTime() - new Date(a.watched_on).getTime()
);

// console.log('sortedFilms', sortedFilms);
---

<Layout title="Movies" description={`${count} movies watched on Letterboxd`}>
    <div class="container mx-auto px-4 py-40">
        <div class="max-w-6xl mx-auto">
            <div class="mb-12">
                <h1 class="text-4xl font-bold mb-4">Movies</h1>
                <p class="text-neutral-600 mb-2">
                    {count} movies watched â€¢ Last updated: {
                        new Date(updated_at).toLocaleDateString()
                    }
                </p>
            </div>

            {
                error && (
                    <div class="bg-red-50 border border-red-200 rounded-lg p-4 mb-8">
                        <p class="text-red-800">Failed to load movie data: {error}</p>
                    </div>
                )
            }

            {
                films.length > 0 && (
                    <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 gap-6">
                        {sortedFilms.map((film) => {
                            const watchDate = new Date(film.watched_on);
                            const formattedDate = watchDate.toLocaleDateString('en-US', {
                                month: 'short',
                                day: 'numeric',
                                year: 'numeric'
                            });

                            // Extract year from title (assuming format "Title (Year)")
                            const titleMatch = film.title.match(/^(.+)\s\((\d{4})\)$/);
                            const movieTitle = titleMatch ? titleMatch[1] : film.title;
                            const movieYear = titleMatch ? titleMatch[2] : '';

                            // Generate stars for rating
                            const fullStars = Math.floor(film.rating);
                            const hasHalfStar = film.rating % 1 >= 0.5;
                            const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);

                            return (
                                <div class="group">
                                    <a
                                        href={`https://letterboxd.com/${film.permalink}/`}
                                        target="_blank"
                                        rel="noopener"
                                        class="block"
                                    >
                                        <div class="bg-neutral-100 aspect-[2/3] rounded-lg mb-3 flex items-center justify-center group-hover:bg-neutral-200 transition-colors">
                                            <div class="text-center text-neutral-500 px-4">
                                                <div class="text-2xl mb-2">ðŸŽ¬</div>
                                                <div class="text-xs font-medium leading-tight">
                                                    {movieTitle}
                                                </div>
                                                {movieYear && (
                                                    <div class="text-xs text-neutral-400 mt-1">
                                                        {movieYear}
                                                    </div>
                                                )}
                                            </div>
                                        </div>
                                    </a>

                                    <div class="space-y-1">
                                        <h3 class="font-medium text-sm leading-tight line-clamp-2">
                                            <a
                                                href={`https://letterboxd.com/film/${film.permalink}/`}
                                                target="_blank"
                                                rel="noopener"
                                                class="hover:underline"
                                            >
                                                {movieTitle}
                                            </a>
                                        </h3>

                                        {movieYear && (
                                            <p class="text-xs text-neutral-500">{movieYear}</p>
                                        )}

                                        {film.rating > 0 && (
                                            <div class="flex items-center gap-1">
                                                <div class="flex text-yellow-500 text-xs">
                                                    {Array.from(
                                                        { length: fullStars },
                                                        () => 'â˜…'
                                                    ).join('')}
                                                    {hasHalfStar && 'â˜†'}
                                                    {Array.from(
                                                        { length: emptyStars },
                                                        () => 'â˜†'
                                                    ).join('')}
                                                </div>
                                                <span class="text-xs text-neutral-400">
                                                    ({film.rating})
                                                </span>
                                            </div>
                                        )}

                                        <div class="flex items-center gap-2 text-xs text-neutral-500">
                                            <span>{formattedDate}</span>
                                            {film.rewatched && (
                                                <span class="bg-neutral-200 px-1.5 py-0.5 rounded text-xs">
                                                    rewatch
                                                </span>
                                            )}
                                            {film.liked && (
                                                <span class="bg-red px-1.5 py-0.5 rounded text-xs">
                                                    liked
                                                </span>
                                            )}
                                        </div>
                                    </div>
                                </div>
                            );
                        })}
                    </div>
                )
            }

            {
                films.length === 0 && !error && (
                    <div class="text-center py-20">
                        <div class="text-6xl mb-4">ðŸŽ¬</div>
                        <h2 class="text-xl font-medium mb-2">No movies found</h2>
                        <p class="text-neutral-600">Check back later for movie updates.</p>
                    </div>
                )
            }
        </div>
    </div>
</Layout>

<style>
    .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
</style>
