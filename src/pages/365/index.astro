---
import Grid from '@components/Grid.astro';
import GridBox from '@components/GridBox.astro';
import Headline from '@components/Headline.astro';
import SectionContent from '@components/SectionContent.astro';
import { getCollection } from 'astro:content';
import { createDayArray, formatIndexNumber, getDayOfYear } from 'src/utils/365-helpers';
import { Image } from 'astro:assets';
import Layout from '@layouts/Layout.astro';
import { SmileyNervous } from '@phosphor-icons/react';
import RobinCamera from '@assets/images/robin-camera.png';
import Toggle from '@components/Toggle.astro';
import NewSlider from '@components/newSlider/NewSlider.astro';
import NewSliderItem from '@components/newSlider/NewSliderItem.astro';

const today = new Date();
const days = createDayArray(getDayOfYear(today));

const photoItems = await getCollection('365');
photoItems.sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());

// Create an indexed photo map for proper numbering
const indexedPhotoMap = new Map();
photoItems.forEach((item, index) => {
    indexedPhotoMap.set(item.data.day, photoItems.length - index);
});

const getPhotoForDay = (day: string) => {
    return photoItems.find((photoItem) => photoItem.data.day === day);
};

// Check if there are any placeholder days
const hasPlaceholderDays = days.some((day) => !getPhotoForDay(day));
---

<Layout title="365" description="365 project - one photo a day for a year" ogimageName="365.jpg">
    <div
        class="flex flex-col justify-center pb-16 pt-32 lg:py-40"
        style="min-height: calc(100vh - 120px)"
    >
        <SectionContent
            classes="w-full"
            title="365 project"
            linkText="RSS feed"
            linkUrl="/365-rss.xml"
        >
            I'm capturing and sharing one photo daily for a year. I may not upload them on the same
            day, as I enjoy taking photos more than sharing them.
        </SectionContent>

        {/* Only render the toggle if there are placeholder days */}
        {
            hasPlaceholderDays && (
                <Grid classes="w-full xl:mt-12">
                    <GridBox desktopFull tabletFull mobileFull>
                        <Toggle id="toggle-placeholders" label="Show empty days" />
                    </GridBox>
                </Grid>
            )
        }

        <NewSlider>
            {
                days.map((day, index) => {
                    const hasPhoto = getPhotoForDay(day);
                    return hasPhoto ? (
                        <NewSliderItem largeFraction={3} mediumFraction={2.5} smallFraction={1.25}>
                            <a href={`365/${hasPhoto.data.day}`} class="h-full w-full">
                                <figure class="h-full w-full">
                                    <Image
                                        src={hasPhoto.data.image as ImageMetadata}
                                        alt={
                                            hasPhoto.data.description
                                                ? (hasPhoto.data.description as string)
                                                : `Photo from ${hasPhoto.data.day}`
                                        }
                                        class="bg-neutral-100"
                                    />
                                    <figcaption class="mt-2 flex items-center gap-3 font-mono text-xs">
                                        <span>
                                            {indexedPhotoMap.get(day).toString().padStart(3, '0')}
                                        </span>
                                        <span>–</span>
                                        <span>{day}</span>
                                    </figcaption>
                                </figure>
                            </a>
                        </NewSliderItem>
                    ) : (
                        <NewSliderItem classes="placeholder-item hidden">
                            <div class="flex h-full w-full flex-col gap-2">
                                <div class="flex h-full w-full items-center justify-center self-start border-2 border-dashed border-black-200 text-center text-black-400">
                                    <div class="flex flex-col items-center gap-2">
                                        <SmileyNervous
                                            weight="regular"
                                            size={40}
                                            color="rgba(0,0,0,0.2)"
                                        />
                                        <p class="px-10">
                                            No photo
                                            <br />
                                            uploaded yet
                                        </p>
                                    </div>
                                </div>
                                <p class="font-mono text-xs text-black-400">{day}</p>
                            </div>
                        </NewSliderItem>
                    );
                })
            }
        </NewSlider>
    </div>

    <div class="pb-40">
        <Grid>
            <GridBox
                desktopStart={3}
                desktopEnd={7}
                tabletStart={1}
                tabletEnd={4}
                classes="flex flex-col justify-center"
            >
                <Headline level={3}>But why?</Headline>
                <p class="mt-6">
                    We all know the impulse to want to change something at the beginning of the
                    year, and this is mine: My main goal with this project is to confront my
                    unhealthy perfectionism. By committing to share one photo each day for a year, I
                    aim to learn how to embrace and share work that isn’t perfect. It’s about
                    letting go of the need for everything to be flawless and finding beauty in the
                    process of creation. Join me on this journey as I grow and challenge myself!
                </p>
            </GridBox>
            <GridBox
                desktopStart={9}
                desktopEnd={11}
                tabletStart={6}
                tabletEnd={8}
                mobileStart={1}
                mobileEnd={3}
                classes="flex items-center justify-end md:justify-start mt-12 md:mt-0"
            >
                <Image
                    src={RobinCamera}
                    alt="Illustration of me walking with a camera"
                    widths={[640]}
                    sizes={`320px`}
                    class="max-w-[180px]"
                />
            </GridBox>
        </Grid>
    </div>
</Layout>

<script>
    const togglePlaceholders = document.getElementById('toggle-placeholders') as HTMLInputElement;
    const placeholderItems = document.querySelectorAll('.placeholder-item');

    // Check localStorage for saved preference on page load
    const showEmptyDays = localStorage.getItem('showEmptyDays') === 'true';

    // Set initial toggle state based on saved preference
    if (togglePlaceholders) {
        togglePlaceholders.checked = showEmptyDays;

        // Apply visibility settings on page load
        placeholderItems.forEach((item) => {
            if (showEmptyDays) {
                item.classList.remove('hidden');
            } else {
                item.classList.add('hidden');
            }
        });

        // Add change event listener
        togglePlaceholders.addEventListener('change', (e) => {
            const target = e.target as HTMLInputElement;

            // Save preference to localStorage
            localStorage.setItem('showEmptyDays', target.checked.toString());

            // Update visibility of placeholder items
            placeholderItems.forEach((item) => {
                if (target.checked) {
                    item.classList.remove('hidden');
                } else {
                    item.classList.add('hidden');
                }
            });
        });
    }
</script>
