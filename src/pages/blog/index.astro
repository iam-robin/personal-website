---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Grid from '@components/Grid.astro';
import GridBox from '@components/GridBox.astro';
import TagCloud from '@components/TagCloud.astro';
import YearDivider from '@components/blog/YearDivider.astro';
import BlogPostCard from '@components/blog/BlogPostCard.astro';
import SectionContent from '@components/SectionContent.astro';

// Get all blog posts and sort by date
const allBlogPosts = await getCollection('blog', ({ data }) => {
    return import.meta.env.PROD ? !data.draft : true;
});

const sortedPosts = allBlogPosts.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

// Generate tag counts for the tag cloud
const allTags = allBlogPosts.flatMap((post) => post.data.tags || []);
const tagCounts = allTags.reduce(
    (acc, tag) => {
        acc[tag] = (acc[tag] || 0) + 1;
        return acc;
    },
    {} as Record<string, number>
);

const tagCloudData = Object.entries(tagCounts).map(([name, count]) => ({ name, count }));
---

<Layout title="Blog | iamrob.in">
    <Grid classes="py-40">
        <GridBox desktopFull>
            <SectionContent title="Blog">
                After years of wanting to have a blog, I am finally putting pen to paper (or fingers
                to keyboard). It took me some time to build the courage, but now Iâ€™m excited to dive
                into a variety of topics that interest me. Your feedback and perspectives are always
                welcome and I'm looking forward to the conversations that will come from these
                posts.
            </SectionContent>

            <TagCloud tags={tagCloudData} basePath="/blog" />

            <div class="space-y-12">
                {
                    (() => {
                        let currentYear: number | null = null;
                        return sortedPosts.map((post) => {
                            const postYear = post.data.date.getFullYear();
                            const yearChanged = currentYear !== postYear;
                            currentYear = postYear;

                            return (
                                <>
                                    {yearChanged && <YearDivider year={postYear} />}
                                    <BlogPostCard post={post} />
                                </>
                            );
                        });
                    })()
                }
            </div>
        </GridBox>
    </Grid>
</Layout>
