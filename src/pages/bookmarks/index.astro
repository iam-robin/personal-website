---
import Layout from '@layouts/Layout.astro';
import Grid from '@components/Grid.astro';
import GridBox from '@components/GridBox.astro';
import BookmarkItem from '@components/bookmarks/BookmarkItem.astro';
import TagCloud from '@components/TagCloud.astro';
import { fetchBookmarks } from 'src/api/raindrop';
import type { Bookmark } from '@components/bookmarks/BookmarkItem.astro';
import BookmarksStage from '@components/bookmarks/BookmarksStage.astro';

const bookmarks: Bookmark[] = await fetchBookmarks(0);

// Get tag counts
const allTags = bookmarks.flatMap((bookmark) => bookmark.tags);
const tagCounts = allTags.reduce(
    (acc, tag) => {
        acc[tag] = (acc[tag] || 0) + 1;
        return acc;
    },
    {} as Record<string, number>
);

const tags = Object.entries(tagCounts).map(([name, count]) => ({ name, count }));
// Sort by count (most frequent first)
tags.sort((a, b) => b.count - a.count);
---

<Layout title="Bookmarks">
    <BookmarksStage />
    <Grid classes="mt-16">
        <GridBox desktopFull>
            <TagCloud tags={tags} basePath="/bookmarks" total={bookmarks.length} />
            <ul class="mb-40">
                {bookmarks.map((bookmark: Bookmark) => <BookmarkItem bookmark={bookmark} />)}
            </ul>
        </GridBox>
    </Grid>
</Layout>

<style>
    a {
        color: #635c7f;
    }

    a:hover {
        color: #4c4666;
        text-decoration: underline;
        text-underline-offset: 0.2em;
    }
</style>

<script src="../../scripts/listItemImageHoverEffect.js"></script>
