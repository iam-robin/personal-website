---
import { Icon } from 'astro-icon/components';
import { getAllContentCounts } from '@utils/content-counts';
import { Image } from 'astro:assets';
import StickerLogo from '@assets/sticker-logo.svg';
import NavFlyoutMock from '@assets/nav-flyout-mock.png';
import NavFlyoutMock2 from '@assets/nav-flyout-mock-2.png';

interface NavItem {
    name: string;
    path: string;
    icon: string;
    iconBg: string;
    iconColor: string;
    countKey: keyof typeof counts;
    description?: string;
    teaserImage: ImageMetadata;
}

// Fetch content counts only during build, use mock data in development
const counts = import.meta.env.DEV
    ? {
          books: 12,
          bookmarks: 45,
          postcards: 8,
          garden: 23,
          blog: 15,
          photos365: 180
      }
    : await getAllContentCounts();

export const navData: NavItem[] = [
    {
        name: 'Books',
        path: '/media',
        icon: 'ph:book-fill',
        iconBg: 'bg-red',
        iconColor: 'text-red-dark',
        countKey: 'books',
        teaserImage: NavFlyoutMock
    },
    {
        name: 'Bookmarks',
        path: '/bookmarks',
        icon: 'ph:bookmark-fill',
        iconBg: 'bg-blue',
        iconColor: 'text-blue-dark',
        countKey: 'bookmarks',
        teaserImage: NavFlyoutMock2
    },
    {
        name: 'Postcards',
        path: '/postcards',
        icon: 'ph:stamp-fill',
        iconBg: 'bg-lilac',
        iconColor: 'text-lilac-dark',
        countKey: 'postcards',
        teaserImage: NavFlyoutMock2
    },
    {
        name: 'Garden',
        path: '/garden',
        icon: 'ph:plant-fill',
        iconBg: 'bg-green',
        iconColor: 'text-green-dark',
        countKey: 'garden',
        teaserImage: NavFlyoutMock2
    },
    {
        name: 'Blog',
        path: '/blog',
        icon: 'ph:article-fill',
        iconBg: 'bg-yellow',
        iconColor: 'text-yellow-dark',
        countKey: 'blog',
        teaserImage: NavFlyoutMock
    },
    {
        name: '365 project',
        path: '/365',
        icon: 'ph:calendar-fill',
        iconBg: 'bg-red',
        iconColor: 'text-red-dark',
        countKey: 'photos365',
        teaserImage: NavFlyoutMock2
    }
];
---

<aside
    class="sidebar-main fixed top-0 bottom-0 p-8 z-50 text-white transition-[width,padding] duration-300 ease-in-out flex flex-col justify-between"
>
    <div class="relative">
        <div class="min-h-[136px]">
            <a href="/" class="flex gap-3 flex-col items-center">
                <Image
                    src={StickerLogo}
                    alt="Holographic sticker of my face"
                    widths={[128]}
                    sizes={`128px`}
                    class="max-w-[72px] sticker-logo transition-[max-width, margin] duration-300 ease-in-out"
                    data-rarity="common"
                />
                <div class="text-nowrap logo-text transition-opacity duration-300 ease-in-out">
                    <p class="text-sm font-bold text-white-900">Robin Spielmann</p>
                    <p class="text-xs font-mono text-white-600 tight-word-spacing">
                        Design Engineer
                    </p>
                </div>
            </a>
        </div>

        <nav class="mt-32">
            <ul class="space-y-4">
                {
                    navData.map((item) => (
                        <li
                            class="relative nav-item"
                            data-title={item.name}
                            data-description={item.description}
                        >
                            <a
                                href={item.path}
                                class="flex gap-3 items-center justify-between group hover:bg-white/5 rounded-md p-2 -m-2 transition-colors"
                            >
                                <div class="flex items-center gap-3 min-w-0 flex-1">
                                    <div
                                        class={`w-6 h-6 p-0.5 ${item.iconBg} flex items-center justify-center rounded flex-shrink-0`}
                                    >
                                        <Icon name={item.icon} class={item.iconColor} />
                                    </div>
                                    <span class="nav-text transition-opacity duration-300 ease-in-out whitespace-nowrap overflow-hidden">
                                        {item.name}
                                    </span>
                                </div>
                                <span class="nav-count opacity-30 transition-opacity duration-300 ease-in-out flex-shrink-0">
                                    ({counts[item.countKey]})
                                </span>
                            </a>
                        </li>
                    ))
                }
            </ul>
        </nav>

        <!-- Navigation flyout for tablets -->
        <div
            id="nav-flyout"
            class="absolute left-full ml-4 bg-[#101827] border text-white border-[#394762] rounded-lg opacity-0 pointer-events-none p-3 z-50 transition-all duration-200 ease-out"
        >
            <div id="nav-flyout-title" class="text-sm font-semibold"></div>
            <!-- Triangle pointer with border -->
            <div
                class="absolute right-full top-1/2 -translate-y-1/2 w-0 h-0 border-t-[8.5px] border-t-transparent border-b-[8.5px] border-b-transparent border-r-[8.5px] border-r-[#394762]"
            >
            </div>
            <!-- Triangle pointer fill -->
            <div
                class="absolute right-full top-1/2 -translate-y-1/2 translate-x-[0.8px] w-0 h-0 border-t-[8px] border-t-transparent border-b-[8px] border-b-transparent border-r-[8px] border-r-[#101827]"
            >
            </div>
        </div>
    </div>
    <div class="footer-container relative">
        <!-- Toggle button for collapsed state -->
        <button
            id="footer-toggle"
            class="footer-toggle-btn flex items-center justify-center w-8 h-8 rounded-md hover:bg-white/10 transition-colors opacity-0 pointer-events-none"
            aria-label="Footer menu"
        >
            <Icon name="ph:dots-three" class="w-5 h-5" />
        </button>

        <!-- Direct links for expanded state -->
        <ul class="footer-links text-xs text-white-600">
            <li>
                <a
                    href="/legal"
                    class="hover:text-white/80 transition-colors whitespace-nowrap overflow-hidden"
                    >Legal notice</a
                >
            </li>
            <li>
                <a
                    href="/changelog"
                    class="hover:text-white-800 transition-colors whitespace-nowrap overflow-hidden"
                    >Changelog</a
                >
            </li>
            <li>
                <a
                    href="https://github.com/iam-robin/personal-website"
                    class="hover:text-white/80 transition-colors whitespace-nowrap overflow-hidden"
                    >Source code</a
                >
            </li>
        </ul>

        <!-- Flyout menu for collapsed state -->
        <div
            id="footer-flyout"
            class="footer-flyout absolute bottom-0 left-full ml-4 bg-[var(--body-bg-color)] border border-white/10 rounded-md p-2 min-w-[160px] opacity-0 pointer-events-none transition-opacity duration-200 z-[9999]"
        >
            <ul class="space-y-1">
                <li>
                    <a
                        href="/legal"
                        class="block px-2 py-1 text-sm hover:bg-white/10 rounded transition-colors"
                        >Legal notice</a
                    >
                </li>
                <li>
                    <a
                        href="/changelog"
                        class="block px-2 py-1 text-sm hover:bg-white/10 rounded transition-colors"
                        >Changelog</a
                    >
                </li>
                <li>
                    <a
                        href="https://github.com/iam-robin/personal-website"
                        class="block px-2 py-1 text-sm hover:bg-white/10 rounded transition-colors"
                        >Source code</a
                    >
                </li>
            </ul>
        </div>
    </div>
</aside>

<script>
    // Footer flyout functionality
    function initFooterFlyout() {
        // Function to check if footer flyout should be enabled
        function shouldEnableFooterFlyout() {
            return window.innerWidth >= 768;
        }

        if (!shouldEnableFooterFlyout()) {
            return; // Exit early, no footer flyout needed on mobile
        }

        const footerToggle = document.getElementById('footer-toggle');
        const footerFlyout = document.getElementById('footer-flyout');

        if (!footerToggle || !footerFlyout) return;

        let isOpen = false;

        function toggleFlyout() {
            isOpen = !isOpen;
            if (isOpen) {
                footerFlyout!.classList.remove('opacity-0', 'pointer-events-none');
            } else {
                footerFlyout!.classList.add('opacity-0', 'pointer-events-none');
            }
        }

        function closeFlyout() {
            if (isOpen) {
                isOpen = false;
                footerFlyout!.classList.add('opacity-0', 'pointer-events-none');
            }
        }

        // Toggle on button click
        footerToggle.addEventListener('click', (e) => {
            e.stopPropagation();
            toggleFlyout();
        });

        // Close on outside click
        document.addEventListener('click', (e) => {
            const target = e.target as Element;
            if (!footerToggle.contains(target) && !footerFlyout!.contains(target)) {
                closeFlyout();
            }
        });
    }

    // Initialize footer flyout when DOM is loaded
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initFooterFlyout);
    } else {
        initFooterFlyout();
    }

    // Navigation flyout functionality for tablets only
    function initNavFlyout() {
        // Function to check if nav flyout should be enabled (tablets only)
        function shouldEnableNavFlyout() {
            return window.innerWidth >= 768 && window.innerWidth <= 1023;
        }

        if (!shouldEnableNavFlyout()) {
            return; // Exit early, only show on tablets
        }

        const navItems = document.querySelectorAll('.nav-item');
        const flyout = document.getElementById('nav-flyout');
        const flyoutTitle = document.getElementById('nav-flyout-title');

        if (!flyout || !flyoutTitle) return;

        let currentItem: Element | null = null;

        navItems.forEach((navItem) => {
            navItem.addEventListener('mouseenter', () => {
                const title = navItem.getAttribute('data-title');

                // Update content with just the title
                flyoutTitle.textContent = title;

                // Position the flyout relative to the nav item
                const navRect = navItem.getBoundingClientRect();
                const sidebar = document.querySelector('.sidebar-main');
                const sidebarRect = sidebar?.getBoundingClientRect();

                if (sidebarRect) {
                    const relativeTop = navRect.top - sidebarRect.top - 10;
                    flyout.style.top = `${relativeTop}px`;
                    flyout.style.transform = 'translateY(-50%)';
                }

                // Show the flyout
                flyout.classList.remove('opacity-0', 'pointer-events-none');
                currentItem = navItem;
            });

            navItem.addEventListener('mouseleave', () => {
                // Small delay to allow moving to flyout
                setTimeout(() => {
                    if (!flyout.matches(':hover') && currentItem === navItem) {
                        flyout.classList.add('opacity-0', 'pointer-events-none');
                        currentItem = null;
                    }
                }, 100);
            });
        });

        // Keep flyout open when hovering over it
        flyout.addEventListener('mouseenter', () => {
            flyout.classList.remove('opacity-0', 'pointer-events-none');
        });

        flyout.addEventListener('mouseleave', () => {
            flyout.classList.add('opacity-0', 'pointer-events-none');
            currentItem = null;
        });

        // Hide flyout on window resize if no longer in tablet range
        window.addEventListener('resize', () => {
            if (!shouldEnableNavFlyout()) {
                flyout.classList.add('opacity-0', 'pointer-events-none');
                currentItem = null;
            }
        });
    }

    // Initialize navigation flyout when DOM is loaded
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initNavFlyout);
    } else {
        initNavFlyout();
    }
</script>

<style>
    /* Sidebar default width using custom property */
    .sidebar-main {
        width: var(--sidebar-width);
    }

    /* Reduce word spacing between Design and Engineer */
    .tight-word-spacing {
        word-spacing: -0.2em;
    }

    /* Responsive sidebar behavior */
    @media (max-width: 767px) {
        .sidebar-main {
            display: none;
        }
    }

    @media (min-width: 768px) and (max-width: 1023px) {
        /* Use collapsed width on tablets */
        .sidebar-main {
            width: var(--sidebar-width-collapsed);
            padding-left: 1.5rem;
            padding-right: 1.5rem;
            overflow: visible;
        }

        .logo-text,
        .nav-text,
        .nav-count,
        .footer-links {
            opacity: 0;
            pointer-events: none;
        }

        .footer-links {
            height: 0;
        }

        .footer-toggle-btn {
            opacity: 1;
            pointer-events: auto;
        }

        .sticker-logo {
            max-width: 40px;
            margin-left: -4px;
        }

        /* Show navigation flyout on tablets */
        #nav-flyout {
            display: block;
        }
    }

    /* Hide navigation flyout on mobile and desktop */
    @media (max-width: 767px), (min-width: 1024px) {
        #nav-flyout {
            display: none !important;
        }
    }
</style>
