---
import InvertedCorner from './InvertedCorner.astro';

interface Props {
    position: 'top' | 'bottom';
    fill?: string;
    showCorners?: boolean;
}

const { position, fill = 'var(--body-bg-color)', showCorners = true } = Astro.props;

const positionClasses = {
    top: {
        container: 'top-[0]',
        cornerPosition: '-bottom-3',
        leftCornerRotation: '-rotate-90',
        rightCornerRotation: ''
    },
    bottom: {
        container: 'bottom-[0]',
        cornerPosition: '-top-3',
        leftCornerRotation: 'rotate-180',
        rightCornerRotation: 'rotate-90'
    }
};

const classes = positionClasses[position];
---

<div
    class={`hidden md:block fixed ${classes.container} z-20 h-16 transition-[left,right,height] duration-300 ease-in-out md:left-[var(--sidebar-width)] md:right-4 md:h-8 max-w-[var(--content-box-max-width)] 2xl:left-[var(--content-2xl-left-spacing-center)]`}
>
    <div class="bg-[var(--body-bg-color)] mx-auto h-full relative after:content-['']">
        {
            showCorners && (
                <>
                    <InvertedCorner
                        class={`absolute ${classes.cornerPosition} h-3 w-3 left-[0] -z-10 ${classes.leftCornerRotation}`}
                        fill={fill}
                    />
                    <InvertedCorner
                        class={`absolute ${classes.cornerPosition} h-3 w-3 right-[0] -z-10 ${classes.rightCornerRotation}`}
                        fill={fill}
                    />
                </>
            )
        }
    </div>
</div>
